{
  "name": "Lodash.getpath",
  "tagline": "A lodash plugin extension for _.get, which allows intuitive paths eg. 'name[0,1]' and 'a.b[].x[-1].z'",
  "body": "[![Travis](https://img.shields.io/travis/crazy4groovy/lodash.getPath.svg)](https://travis-ci.org/crazy4groovy/lodash.getPath)\r\n\r\n# lodash-getpath\r\n\r\nA [lodash](https://lodash.com/) plugin/extension/[mixin](https://lodash.com/docs#mixin) for [_.get](https://lodash.com/docs#get), which allows intuitive paths eg. 'name[0,1]' and 'a.b[].x[-1].z'\r\n\r\n## What for?\r\n\r\nAbove-and-beyond pathing syntax for nested-Array properties:\r\n\r\n- +/-ve index --> returns value from start/end of Array\r\n- `[0,1,-2]` list of indexes --> returns a (spliced) Array\r\n- `[]` all indexes --> returns a (whole) Array\r\n\r\n## Install\r\n\r\n`npm install --save lodash-getpath`\r\n\r\n## Usage\r\n\r\n<pre>\r\nvar _ = require('lodash-getpath'); // import lodash with the mixin provided\r\n\r\n// simple object example\r\nvar obj1 = { a: [1, 2, 3] };\r\n_.getPath(obj1, 'a[0]') === 1;           // positive index\r\n_.getPath(obj1, 'a[0, 2]') === [1, 3];   // positive indexes\r\n_.getPath(obj1, 'a[1, 1]') === [2, 2];   // repeated indexes (ok!)\r\n_.getPath(obj1, 'a[-1]') === 3;          // negative index\r\n_.getPath(obj1, 'a[-1, -2]') === [3, 2]; // negative indexes\r\n\r\n// a little more complex object\r\nvar pathUsersNames = 'users[].name';\r\n_.getPath({ users: [{ name: 'Steve' },{ name: 'Sam' }] }, pathUsersNames) === ['Steve', 'Sam']; // all indexes, with sub-key\r\n\r\n// *any* complex object/array structure you can think of, pull out the data you need in a single query!\r\n...\r\n</pre>\r\n\r\nAlso available in the browser as simply `_getPath()` in the global context/window\r\n\r\nCurrently built using `lodash ^4.0.0`",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}